module shifter (
    input alufn[2], //2-bit alufn input signal specifically ALUFN0 and ALUFN1  
    input a[8],     //8-bit input A
    input b[3],     //4-bit input B 
    output out[8]   //8-bit output out
  ) {

  
  
  always {

    
    case (alufn){                        //Do note the order of the input bits and we are using switch statments to organize the code
      2b00: out = a << b;   //ALUFN[1:0] = 00 corresponds to left shift
      2b01: out = a >> b;   //ALUFN[1:0] = 01 corresponds to right shift
      2b11: out = $signed(a) >>> b;  //ALUFN[1:0] = 11 corresponds to signed right shift
      default: out = a;              //default output     
    }
  }
  
}
