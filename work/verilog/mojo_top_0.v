/*
   This file was generated automatically by the Mojo IDE version B1.3.6.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module mojo_top_0 (
    input clk,
    input rst_n,
    input r1,
    input p1,
    input s1,
    input r2,
    input p2,
    input s2,
    input rstbut,
    output reg [3:0] r1led,
    output reg [3:0] r2led,
    output reg [3:0] p1led,
    output reg [3:0] p2led,
    output reg [3:0] s1led,
    output reg [3:0] s2led,
    output reg [2:0] scr1led,
    output reg [2:0] scr2led,
    output reg p1winled,
    output reg p2winled,
    output reg drawled,
    output reg r1chs,
    output reg r2chs,
    output reg s1chs,
    output reg s2chs,
    output reg p1chs,
    output reg p2chs
  );
  
  
  
  reg rst;
  
  reg rst2;
  
  wire [1-1:0] M_reset_cond_out;
  reg [1-1:0] M_reset_cond_in;
  reset_conditioner_1 reset_cond (
    .clk(clk),
    .in(M_reset_cond_in),
    .out(M_reset_cond_out)
  );
  wire [1-1:0] M_reset_cond2_out;
  reg [1-1:0] M_reset_cond2_in;
  reset_conditioner_1 reset_cond2 (
    .clk(clk),
    .in(M_reset_cond2_in),
    .out(M_reset_cond2_out)
  );
  wire [3-1:0] M_rng_out;
  reg [1-1:0] M_rng_rst;
  rng_3 rng (
    .clk(clk),
    .rst(M_rng_rst),
    .out(M_rng_out)
  );
  wire [2-1:0] M_btn1_c;
  reg [1-1:0] M_btn1_rst;
  reg [1-1:0] M_btn1_r;
  reg [1-1:0] M_btn1_p;
  reg [1-1:0] M_btn1_s;
  reg [1-1:0] M_btn1_be;
  btn_4 btn1 (
    .clk(clk),
    .rst(M_btn1_rst),
    .r(M_btn1_r),
    .p(M_btn1_p),
    .s(M_btn1_s),
    .be(M_btn1_be),
    .c(M_btn1_c)
  );
  wire [2-1:0] M_btn2_c;
  reg [1-1:0] M_btn2_rst;
  reg [1-1:0] M_btn2_r;
  reg [1-1:0] M_btn2_p;
  reg [1-1:0] M_btn2_s;
  reg [1-1:0] M_btn2_be;
  btn_4 btn2 (
    .clk(clk),
    .rst(M_btn2_rst),
    .r(M_btn2_r),
    .p(M_btn2_p),
    .s(M_btn2_s),
    .be(M_btn2_be),
    .c(M_btn2_c)
  );
  wire [3-1:0] M_rpsqty1_out;
  wire [4-1:0] M_rpsqty1_rled;
  wire [4-1:0] M_rpsqty1_pled;
  wire [4-1:0] M_rpsqty1_sled;
  wire [1-1:0] M_rpsqty1_z;
  reg [2-1:0] M_rpsqty1_waqty;
  reg [1-1:0] M_rpsqty1_wrqty;
  reg [3-1:0] M_rpsqty1_wdqty;
  reg [2-1:0] M_rpsqty1_r;
  rpsqty_6 rpsqty1 (
    .clk(clk),
    .rst(rst2),
    .waqty(M_rpsqty1_waqty),
    .wrqty(M_rpsqty1_wrqty),
    .wdqty(M_rpsqty1_wdqty),
    .r(M_rpsqty1_r),
    .out(M_rpsqty1_out),
    .rled(M_rpsqty1_rled),
    .pled(M_rpsqty1_pled),
    .sled(M_rpsqty1_sled),
    .z(M_rpsqty1_z)
  );
  wire [3-1:0] M_rpsqty2_out;
  wire [4-1:0] M_rpsqty2_rled;
  wire [4-1:0] M_rpsqty2_pled;
  wire [4-1:0] M_rpsqty2_sled;
  wire [1-1:0] M_rpsqty2_z;
  reg [2-1:0] M_rpsqty2_waqty;
  reg [1-1:0] M_rpsqty2_wrqty;
  reg [3-1:0] M_rpsqty2_wdqty;
  reg [2-1:0] M_rpsqty2_r;
  rpsqty_6 rpsqty2 (
    .clk(clk),
    .rst(rst2),
    .waqty(M_rpsqty2_waqty),
    .wrqty(M_rpsqty2_wrqty),
    .wdqty(M_rpsqty2_wdqty),
    .r(M_rpsqty2_r),
    .out(M_rpsqty2_out),
    .rled(M_rpsqty2_rled),
    .pled(M_rpsqty2_pled),
    .sled(M_rpsqty2_sled),
    .z(M_rpsqty2_z)
  );
  wire [6-1:0] M_controlunit_alufn;
  wire [3-1:0] M_controlunit_asel;
  wire [2-1:0] M_controlunit_bsel;
  wire [1-1:0] M_controlunit_wrqty1;
  wire [1-1:0] M_controlunit_wrqty2;
  wire [2-1:0] M_controlunit_waqty1;
  wire [2-1:0] M_controlunit_waqty2;
  wire [1-1:0] M_controlunit_wdqtysel;
  wire [2-1:0] M_controlunit_wascr;
  wire [1-1:0] M_controlunit_wrscr;
  wire [1-1:0] M_controlunit_ce;
  wire [1-1:0] M_controlunit_rstsm;
  wire [1-1:0] M_controlunit_be1;
  wire [1-1:0] M_controlunit_be2;
  wire [1-1:0] M_controlunit_btnrst1;
  wire [1-1:0] M_controlunit_btnrst2;
  wire [1-1:0] M_controlunit_leden;
  wire [1-1:0] M_controlunit_p1win;
  wire [1-1:0] M_controlunit_p2win;
  wire [1-1:0] M_controlunit_p1chs;
  wire [1-1:0] M_controlunit_p2chs;
  reg [8-1:0] M_controlunit_aluo;
  reg [2-1:0] M_controlunit_c1;
  reg [2-1:0] M_controlunit_c2;
  reg [3-1:0] M_controlunit_rslt;
  reg [1-1:0] M_controlunit_z1;
  reg [1-1:0] M_controlunit_z2;
  controlUnit_8 controlunit (
    .clk(clk),
    .rst(rst2),
    .aluo(M_controlunit_aluo),
    .c1(M_controlunit_c1),
    .c2(M_controlunit_c2),
    .rslt(M_controlunit_rslt),
    .z1(M_controlunit_z1),
    .z2(M_controlunit_z2),
    .alufn(M_controlunit_alufn),
    .asel(M_controlunit_asel),
    .bsel(M_controlunit_bsel),
    .wrqty1(M_controlunit_wrqty1),
    .wrqty2(M_controlunit_wrqty2),
    .waqty1(M_controlunit_waqty1),
    .waqty2(M_controlunit_waqty2),
    .wdqtysel(M_controlunit_wdqtysel),
    .wascr(M_controlunit_wascr),
    .wrscr(M_controlunit_wrscr),
    .ce(M_controlunit_ce),
    .rstsm(M_controlunit_rstsm),
    .be1(M_controlunit_be1),
    .be2(M_controlunit_be2),
    .btnrst1(M_controlunit_btnrst1),
    .btnrst2(M_controlunit_btnrst2),
    .leden(M_controlunit_leden),
    .p1win(M_controlunit_p1win),
    .p2win(M_controlunit_p2win),
    .p1chs(M_controlunit_p1chs),
    .p2chs(M_controlunit_p2chs)
  );
  wire [1-1:0] M_alu_z;
  wire [1-1:0] M_alu_v;
  wire [1-1:0] M_alu_n;
  wire [8-1:0] M_alu_result;
  reg [6-1:0] M_alu_alufn;
  reg [8-1:0] M_alu_a;
  reg [8-1:0] M_alu_b;
  alu_9 alu (
    .clk(clk),
    .rst(rst2),
    .alufn(M_alu_alufn),
    .a(M_alu_a),
    .b(M_alu_b),
    .z(M_alu_z),
    .v(M_alu_v),
    .n(M_alu_n),
    .result(M_alu_result)
  );
  wire [2-1:0] M_scr_scr1;
  wire [2-1:0] M_scr_scr2;
  wire [3-1:0] M_scr_scr1led;
  wire [3-1:0] M_scr_scr2led;
  reg [1-1:0] M_scr_wrscr;
  reg [2-1:0] M_scr_wascr;
  reg [2-1:0] M_scr_wdscr;
  reg [1-1:0] M_scr_p1win;
  reg [1-1:0] M_scr_p2win;
  scr_10 scr (
    .clk(clk),
    .rst(rst2),
    .wrscr(M_scr_wrscr),
    .wascr(M_scr_wascr),
    .wdscr(M_scr_wdscr),
    .p1win(M_scr_p1win),
    .p2win(M_scr_p2win),
    .scr1(M_scr_scr1),
    .scr2(M_scr_scr2),
    .scr1led(M_scr_scr1led),
    .scr2led(M_scr_scr2led)
  );
  
  wire [3-1:0] M_rpslgc_rslt;
  reg [2-1:0] M_rpslgc_c1;
  reg [2-1:0] M_rpslgc_c2;
  rpslgc_11 rpslgc (
    .c1(M_rpslgc_c1),
    .c2(M_rpslgc_c2),
    .rslt(M_rpslgc_rslt)
  );
  
  wire [1-1:0] M_chsled1_rled;
  wire [1-1:0] M_chsled1_sled;
  wire [1-1:0] M_chsled1_pled;
  reg [2-1:0] M_chsled1_c;
  chsled_12 chsled1 (
    .c(M_chsled1_c),
    .rled(M_chsled1_rled),
    .sled(M_chsled1_sled),
    .pled(M_chsled1_pled)
  );
  
  wire [1-1:0] M_chsled2_rled;
  wire [1-1:0] M_chsled2_sled;
  wire [1-1:0] M_chsled2_pled;
  reg [2-1:0] M_chsled2_c;
  chsled_12 chsled2 (
    .c(M_chsled2_c),
    .rled(M_chsled2_rled),
    .sled(M_chsled2_sled),
    .pled(M_chsled2_pled)
  );
  
  always @* begin
    M_reset_cond_in = ~rst_n;
    rst = M_reset_cond_out;
    M_reset_cond2_in = rstbut;
    rst2 = M_reset_cond2_out | M_controlunit_rstsm;
    M_rng_rst = rst;
    M_controlunit_aluo = M_alu_result;
    M_controlunit_c1 = M_btn1_c;
    M_controlunit_c2 = M_btn2_c;
    M_controlunit_rslt = M_rpslgc_rslt;
    M_controlunit_z1 = M_rpsqty1_z;
    M_controlunit_z2 = M_rpsqty2_z;
    M_rpsqty1_wrqty = M_controlunit_wrqty1;
    M_rpsqty1_r = M_btn1_c;
    M_rpsqty1_waqty = M_controlunit_waqty1;
    
    case (M_controlunit_wdqtysel)
      1'h1: begin
        M_rpsqty1_wdqty = M_alu_result[0+2-:3];
      end
      default: begin
        M_rpsqty1_wdqty = M_rng_out;
      end
    endcase
    M_rpsqty2_wrqty = M_controlunit_wrqty2;
    M_rpsqty2_r = M_btn2_c;
    M_rpsqty2_waqty = M_controlunit_waqty2;
    M_rpsqty2_wdqty = M_alu_result[0+2-:3];
    
    case (M_controlunit_asel)
      default: begin
        M_alu_a = 8'h05;
      end
      3'h1: begin
        M_alu_a = M_rpsqty1_out;
      end
      3'h2: begin
        M_alu_a = M_rpsqty2_out;
      end
      3'h3: begin
        M_alu_a = M_scr_scr1;
      end
      3'h4: begin
        M_alu_a = M_scr_scr2;
      end
    endcase
    
    case (M_controlunit_bsel)
      default: begin
        M_alu_b = M_rng_out;
      end
      2'h1: begin
        M_alu_b = 8'h00;
      end
      2'h2: begin
        M_alu_b = 8'h01;
      end
      2'h3: begin
        M_alu_b = 8'h03;
      end
    endcase
    M_alu_alufn = M_controlunit_alufn;
    M_rpslgc_c1 = M_btn1_c;
    M_rpslgc_c2 = M_btn2_c;
    M_btn1_s = s1;
    M_btn2_s = s2;
    M_btn1_p = p1;
    M_btn2_p = p2;
    M_btn1_r = r1;
    M_btn2_r = r2;
    M_btn1_be = M_controlunit_be1;
    M_btn2_be = M_controlunit_be2;
    M_btn1_rst = rst2 | M_controlunit_btnrst1;
    M_btn2_rst = rst2 | M_controlunit_btnrst2;
    M_scr_wrscr = M_controlunit_wrscr;
    M_scr_wascr = M_controlunit_wascr;
    M_scr_wdscr = M_alu_result[0+1-:2];
    M_scr_p1win = M_controlunit_p1win;
    M_scr_p2win = M_controlunit_p2win;
    scr1led = M_scr_scr1led;
    scr2led = M_scr_scr2led;
    M_chsled1_c = M_btn1_c;
    M_chsled2_c = M_btn2_c;
    p1winled = M_rpslgc_rslt[0+0-:1] & M_controlunit_leden;
    p2winled = M_rpslgc_rslt[1+0-:1] & M_controlunit_leden;
    drawled = M_rpslgc_rslt[2+0-:1] & M_controlunit_leden;
    r1chs = M_chsled1_rled & M_controlunit_leden;
    p1chs = M_chsled1_pled & M_controlunit_leden;
    s1chs = M_chsled1_sled & M_controlunit_leden;
    r2chs = M_chsled2_rled & M_controlunit_leden;
    p2chs = M_chsled2_pled & M_controlunit_leden;
    s2chs = M_chsled2_sled & M_controlunit_leden;
    r1led = M_rpsqty1_rled;
    r2led = M_rpsqty2_rled;
    p1led = M_rpsqty1_pled;
    p2led = M_rpsqty2_pled;
    s1led = M_rpsqty1_sled;
    s2led = M_rpsqty2_sled;
  end
endmodule
