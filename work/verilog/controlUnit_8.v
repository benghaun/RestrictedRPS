/*
   This file was generated automatically by the Mojo IDE version B1.3.6.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module controlUnit_8 (
    input clk,
    input rst,
    input [7:0] aluo,
    input [1:0] c1,
    input [1:0] c2,
    input [2:0] rslt,
    input z1,
    input z2,
    output reg [5:0] alufn,
    output reg [2:0] asel,
    output reg [1:0] bsel,
    output reg wrqty1,
    output reg wrqty2,
    output reg [1:0] waqty1,
    output reg [1:0] waqty2,
    output reg wdqtysel,
    output reg [1:0] wascr,
    output reg wrscr,
    output reg ce,
    output reg rstsm,
    output reg be1,
    output reg be2,
    output reg btnrst1,
    output reg btnrst2,
    output reg leden,
    output reg p1win,
    output reg p2win,
    output reg p1chs,
    output reg p2chs
  );
  
  
  
  localparam GENRCK_state = 5'd0;
  localparam GENSCR_state = 5'd1;
  localparam GENPPR_state = 5'd2;
  localparam CHOICE10_state = 5'd3;
  localparam CHOICE11_state = 5'd4;
  localparam CHOICE1X_state = 5'd5;
  localparam CHOICE20_state = 5'd6;
  localparam CHOICE21_state = 5'd7;
  localparam CHOICE2X_state = 5'd8;
  localparam CHECKRESULT_state = 5'd9;
  localparam P1WIN_state = 5'd10;
  localparam P1CHK_state = 5'd11;
  localparam P2WIN_state = 5'd12;
  localparam P2CHK_state = 5'd13;
  localparam P1WINMATCH_state = 5'd14;
  localparam P2WINMATCH_state = 5'd15;
  localparam DRAW_state = 5'd16;
  
  reg [4:0] M_state_d, M_state_q = GENRCK_state;
  reg [27:0] M_timer_d, M_timer_q = 1'h0;
  
  always @* begin
    M_state_d = M_state_q;
    M_timer_d = M_timer_q;
    
    alufn = 1'h0;
    asel = 1'h0;
    bsel = 1'h0;
    wrqty1 = 1'h0;
    wrqty2 = 1'h0;
    waqty1 = 1'h0;
    waqty2 = 1'h0;
    wdqtysel = 1'h0;
    wascr = 1'h0;
    wrscr = 1'h0;
    ce = 1'h0;
    rstsm = 1'h0;
    be1 = 1'h0;
    be2 = 1'h0;
    btnrst1 = 1'h0;
    btnrst2 = 1'h0;
    leden = 1'h0;
    p1win = 1'h0;
    p2win = 1'h0;
    p1chs = 1'h0;
    p2chs = 1'h0;
    
    case (M_state_q)
      GENRCK_state: begin
        alufn = 6'h01;
        wrqty1 = 1'h1;
        wrqty2 = 1'h1;
        waqty1 = 1'h1;
        waqty2 = 1'h1;
        M_state_d = GENSCR_state;
      end
      GENSCR_state: begin
        alufn = 6'h01;
        wrqty1 = 1'h1;
        wrqty2 = 1'h1;
        waqty1 = 2'h2;
        waqty2 = 2'h2;
        M_state_d = GENPPR_state;
      end
      GENPPR_state: begin
        alufn = 6'h01;
        wrqty1 = 1'h1;
        wrqty2 = 1'h1;
        waqty1 = 2'h3;
        waqty2 = 2'h3;
        M_state_d = CHOICE10_state;
      end
      CHOICE10_state: begin
        alufn = 6'h33;
        asel = 1'h1;
        bsel = 1'h1;
        be1 = 1'h1;
        p1chs = 1'h1;
        if (z1 == 1'h1 || z2 == 1'h1) begin
          M_state_d = DRAW_state;
        end else begin
          if (aluo == 1'h0 && c1 != 1'h0) begin
            M_state_d = CHOICE11_state;
          end else begin
            if (aluo == 1'h1 && c1 != 1'h0) begin
              M_state_d = CHOICE1X_state;
            end
          end
        end
      end
      CHOICE11_state: begin
        alufn = 6'h01;
        asel = 1'h1;
        bsel = 2'h2;
        wrqty1 = 1'h1;
        waqty1 = c1;
        wdqtysel = 1'h1;
        M_state_d = CHOICE20_state;
      end
      CHOICE1X_state: begin
        btnrst1 = 1'h1;
        M_state_d = CHOICE10_state;
      end
      CHOICE20_state: begin
        alufn = 6'h33;
        asel = 3'h2;
        bsel = 1'h1;
        be2 = 1'h1;
        p2chs = 1'h1;
        if (aluo == 1'h0 && c2 != 1'h0) begin
          M_state_d = CHOICE21_state;
        end else begin
          if (aluo == 1'h1 && c2 != 1'h0) begin
            M_state_d = CHOICE2X_state;
          end
        end
      end
      CHOICE21_state: begin
        alufn = 6'h01;
        asel = 3'h2;
        bsel = 2'h2;
        wrqty2 = 1'h1;
        waqty2 = c2;
        M_state_d = CHECKRESULT_state;
      end
      CHECKRESULT_state: begin
        ce = 1'h1;
        leden = 1'h1;
        M_timer_d = M_timer_q + 1'h1;
        if (M_timer_q[27+0-:1] == 1'h1) begin
          M_timer_d = 28'h0000000;
          btnrst1 = 1'h1;
          btnrst2 = 1'h1;
          if (rslt == 3'h1) begin
            M_state_d = P1WIN_state;
          end else begin
            if (rslt == 3'h2) begin
              M_state_d = P2WIN_state;
            end else begin
              if (rslt == 3'h4) begin
                M_state_d = CHOICE10_state;
              end
            end
          end
        end
      end
      CHOICE2X_state: begin
        btnrst2 = 1'h1;
        M_state_d = CHOICE20_state;
      end
      P1WIN_state: begin
        asel = 3'h3;
        bsel = 2'h2;
        wrscr = 1'h1;
        wascr = 2'h1;
        M_state_d = P1CHK_state;
      end
      P1CHK_state: begin
        alufn = 6'h33;
        asel = 2'h3;
        bsel = 2'h3;
        if (aluo == 1'h1) begin
          M_state_d = P1WINMATCH_state;
        end else begin
          M_state_d = CHOICE10_state;
        end
      end
      P2WIN_state: begin
        asel = 3'h4;
        bsel = 2'h2;
        wrscr = 1'h1;
        wascr = 2'h2;
        M_state_d = P2CHK_state;
      end
      P2CHK_state: begin
        alufn = 6'h33;
        asel = 3'h4;
        bsel = 2'h3;
        if (aluo == 1'h1) begin
          M_state_d = P2WINMATCH_state;
        end else begin
          M_state_d = CHOICE10_state;
        end
      end
      P1WINMATCH_state: begin
        p1win = 1'h1;
        M_timer_d = M_timer_q + 1'h1;
        if (M_timer_q[27+0-:1] == 1'h1) begin
          M_timer_d = 28'h0000000;
          rstsm = 1'h1;
          M_state_d = GENRCK_state;
        end
      end
      P2WINMATCH_state: begin
        p2win = 1'h1;
        M_timer_d = M_timer_q + 1'h1;
        if (M_timer_q[27+0-:1] == 1'h1) begin
          M_timer_d = 28'h0000000;
          rstsm = 1'h1;
          M_state_d = GENRCK_state;
        end
      end
      DRAW_state: begin
        p1win = 1'h1;
        p2win = 1'h1;
        M_timer_d = M_timer_q + 1'h1;
        if (M_timer_q[27+0-:1] == 1'h1) begin
          M_timer_d = 28'h0000000;
          rstsm = 1'h1;
          M_state_d = GENRCK_state;
        end
      end
    endcase
  end
  
  always @(posedge clk) begin
    if (rst == 1'b1) begin
      M_timer_q <= 1'h0;
      M_state_q <= 1'h0;
    end else begin
      M_timer_q <= M_timer_d;
      M_state_q <= M_state_d;
    end
  end
  
endmodule
